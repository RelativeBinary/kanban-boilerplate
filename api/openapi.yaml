openapi: 3.1.1
servers: 
  - url: https://kanban3.swagger.io.api/v3
info:
  title: Kanban API
  description: API for accessing and managing a kanban
  version: 1.0.0
  license: 
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: task 
    description: Everything about a task 
paths: 
  /task:
    put: 
      tags: 
        -  task
      summary: Update an existing task. 
      description: update an existing task by id. 
      operationId: updateTask
      requestBody:
        description: Update an existing task in the kanban board 
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/Task'
      responses: 
        '200':
          description: Successful operation 
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found 
        '422':
          description: Validation exception
        default: 
          description: Unexpected error 
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/Error' 
      security: 
        []
        # - kanban_auth: 
        #   - write:tasks
        #   - read:tasks
    post: 
      tags: 
        - task 
      summary: Add a new task to the kanban board
      description: Add a new task to the kanban board 
      operationId: addTask
      requestBody:
        description: Create a new task in the kanban board 
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
        # - kanban_auth:
            # - write:tasks
            # - read:task
   # find by name
   # find by stage
   # find by description
   # get all tasks
  /task/{taskId}:
    get:
      tags:
        - task
      summary: Find a task by ID.
      description: Returns a single task.
      operationId: getTaskById
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid ID supplied
        '404':
          description: Task not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
        # - api_key: []
        # - kanban_auth:
        #     - write:Tasks
        #     - read:Tasks
    post:
      tags:
        - Task
      summary: Updates a Task in the store with form data.
      description: Updates a Task resource based on the form data.
      operationId: updateTaskWithForm
      parameters:
        - name: taskId
          in: path
          description: ID of the task that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of the task that can be updated
          schema:
            type: string
        - name: desc 
          in: query 
          description: Description of the tas that can be updated 
          schema: 
            type: string
        - name: status
          in: query
          description: Status of the task that can be updated
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
        # - kanban_auth:
        #     - write:tasks
        #     - read:tasks
    delete:
      tags:
        - Task
      summary: Deletes a Task.
      description: Delete a Task.
      operationId: deleteTask
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: taskId
          in: path
          description: Task id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task deleted
        '400':
          description: Invalid Task value
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security: []
        # - kanban_auth:
        #     - write:Tasks
        #     - read:Tasks
  /tasks: 
    get: 
      tags: 
        - task 
      summary: Find all tasks 
      description: Returns all tasks 
      operationId: getAllTasks
      responses: 
        '200':
          description: successful operation 
          content:
            application/json: 
              schema: 
                type: array
                items:   
                  $ref: '#/components/schemas/Task'
        '400':
          description: Request error
        '404':
          description: Tasks not found 
        '500': 
          description: Unabled to locate tasks
      security: []
        
components: 
  schemas: 
    Task: 
      type: object 
      properties: 
        id: 
          type: integer
          format: int64 
          example: 10 
        name: 
          type: string 
        desc:
          type: string
          description: long form text for the task 
        stage:
          type: integer
          description: the stage that the task is in within the task lifecycle
    Error: 
      type: object 
      properties: 
        code: 
          type: string 
        message: 
          type: string
      required: 
        - code 
        - message 
  # idk what this is tbh
  securitySchemes:
    kanban_auth: 
      type: oauth2 
      flows: 
        implicit: 
          authorizationUrl: https://kanban3.swagger.oauth/authorize
          scopes: 
            "write:tasks": modify tasks in your account 
            "read:tasks": read tasks
    api_key: 
      type: apiKey 
      name: api_key 
      in: header
                
        